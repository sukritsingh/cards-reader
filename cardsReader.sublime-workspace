{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"data",
				"datafile"
			],
			[
				"output",
				"output_name"
			],
			[
				"T",
				"T"
			],
			[
				"resseq",
				"resSeqList"
			],
			[
				"padnas",
				"pandas_out_dihedrals"
			],
			[
				"entropy",
				"entropy_vals"
			],
			[
				"ent",
				"entropy_vals"
			],
			[
				"topo",
				"topology"
			],
			[
				"enropes",
				"entropies_residue"
			],
			[
				"unie",
				"unique_resi_list"
			],
			[
				"unique",
				"unique_resi_list"
			],
			[
				"entrop",
				"entropy_vals"
			],
			[
				"file",
				"fileName"
			],
			[
				"newMI",
				"newMIError\tstatement"
			],
			[
				"totalMI",
				"totalMIError"
			],
			[
				"bootst",
				"bootstrap_globalCorr_singleResidueSet\tfunction"
			],
			[
				"normS",
				"normStruc\tstatement"
			],
			[
				"nor",
				"normalize_DynMI_Matrix\tfunction"
			],
			[
				"normalize",
				"normalize_StrucMI_Matrix\tfunction"
			],
			[
				"input",
				"inputData"
			],
			[
				"collec",
				"collect_allStruc_States\tfunction"
			],
			[
				"save",
				"save_everything\tfunction"
			],
			[
				"parse",
				"parse_args\tfunction"
			],
			[
				"anaconda",
				"anaconda3"
			],
			[
				"joint",
				"jointEntropyDir\tstatement"
			],
			[
				"jointEntropy",
				"jointEntropyDir\tstatement"
			],
			[
				"jointEn",
				"jointEntropyDir\tstatement"
			],
			[
				"convert",
				"convert_MI_Matrix_To_Distances\tfunction"
			],
			[
				"distance",
				"distanceMats\tstatement"
			],
			[
				"normCross",
				"normCrossB\tstatement"
			],
			[
				"numBk",
				"numBkbones\tparam"
			],
			[
				"psi",
				"psiToChi_Index\tstatement"
			],
			[
				"crossCorr",
				"crossCorr_JointEntropies\tstatement"
			],
			[
				"normalized",
				"normalizedVals\tstatement"
			],
			[
				"normal",
				"normalizedEntropy\tstatement"
			],
			[
				"top",
				"topology"
			],
			[
				"given",
				"givenTopFile\tparam"
			],
			[
				"topol",
				"topologyName"
			],
			[
				"new",
				"newFolderName\tstatement"
			],
			[
				"chosen",
				"chosenAngles\tstatement"
			],
			[
				"histo",
				"histogram_allAngles\tfunction"
			],
			[
				"get",
				"get_TrajList\tfunction"
			],
			[
				"angles",
				"anglesOfInterest\tstatement"
			],
			[
				"transi",
				"transitionPoints"
			],
			[
				"final",
				"finalIndex\tstatement"
			],
			[
				"transit",
				"transitionPoints\tstatement"
			],
			[
				"all",
				"allNames\tparam"
			],
			[
				"load_all",
				"load_allAngles_singleTraj\tfunction"
			],
			[
				"corr",
				"correlator_v2\tmodule"
			],
			[
				"templateString",
				"templateStringForm\tstatement"
			],
			[
				"template",
				"templateString\tparam"
			],
			[
				"choose",
				"chooseTypeOfCorr\tstatement"
			],
			[
				"buff",
				"buffer"
			],
			[
				"scrit",
				"scriptName\tfunction"
			],
			[
				"corrType",
				"corrTypeList\tstatement"
			],
			[
				"tem",
				"templateString\tstatement"
			],
			[
				"currentT",
				"current_TransitionTimes\tstatement"
			],
			[
				"fit",
				"fit_lsq\tstatement"
			],
			[
				"initial",
				"initialGuess\tparam"
			],
			[
				"extrac",
				"extract_singleDihedral_strucStates\tfunction"
			],
			[
				"trajSorted",
				"trajSorted_IndividOrderedTimes\tstatement"
			],
			[
				"trajSord",
				"trajSorted_IndividDisorderedTimes"
			],
			[
				"single",
				"singleStrucTraj\tparam"
			],
			[
				"chosenStruc",
				"chosenStrucTrajs\tstatement"
			],
			[
				"indivi",
				"individualDisordTimes\tstatement"
			],
			[
				"allIndi",
				"allInvidiual_DisordTimes\tstatement"
			],
			[
				"allIn",
				"allIndividal_OrdTimes\tstatement"
			],
			[
				"n_",
				"n_trajs\tstatement"
			],
			[
				"edge",
				"edgeList\tstatement"
			],
			[
				"dihedral",
				"dihedralMap\tstatement"
			],
			[
				"dihed",
				"dihedralMatrix\tstatement"
			],
			[
				"crossCorrB",
				"crossCorrB_stDevMatrix"
			],
			[
				"get_MI",
				"get_MI_standDev"
			],
			[
				"cross",
				"crossCorrA_MI_List"
			],
			[
				"get_MI_",
				"get_MI_standDev"
			],
			[
				"Dyn",
				"Dyn_MI_List"
			],
			[
				"jointCo",
				"jointCountsB"
			],
			[
				"final_dyn",
				"final_dynCounts"
			],
			[
				"final_Struc",
				"final_strucCounts"
			],
			[
				"allStru",
				"allStrucInds"
			],
			[
				"joint_",
				"joint_occurences"
			],
			[
				"n_poss",
				"n_possible_states2"
			],
			[
				"n_angl",
				"n_angles"
			],
			[
				"traj",
				"trajlist"
			],
			[
				"obtain",
				"obtain_transition_times"
			],
			[
				"all_",
				"all_states"
			],
			[
				"avg_",
				"avg_ord_times"
			],
			[
				"psi_",
				"psi_DisordTimes"
			],
			[
				"collect",
				"collect_allOrdAndDisordTimes"
			],
			[
				"n",
				"n_trajs"
			],
			[
				"allP",
				"allPhis"
			],
			[
				"last",
				"last_times"
			],
			[
				"dihedral1",
				"dihedral1_Counts"
			],
			[
				"i",
				"i"
			],
			[
				"dihedral2_",
				"dihedral2_entropy"
			],
			[
				"load",
				"load_matrices"
			],
			[
				"counts",
				"countsList"
			],
			[
				"summed",
				"summedCounts"
			],
			[
				"finalD",
				"finalDynCounts"
			],
			[
				"finalStru",
				"finalStrucCounts"
			],
			[
				"num",
				"num_chosen"
			],
			[
				"indic",
				"indicesChosen"
			],
			[
				"listOfR",
				"listOfRandInts"
			],
			[
				"struc",
				"struc_States"
			],
			[
				"load_",
				"load_struc_states"
			],
			[
				"pdz_hol_",
				"pdz_holCorr_numStateNormed"
			],
			[
				"n_stat",
				"n_states1"
			],
			[
				"n_state",
				"n_states2"
			],
			[
				"n_states",
				"n_states2"
			],
			[
				"ax",
				"ax"
			],
			[
				"joint_entrop",
				"joint_entropies"
			],
			[
				"adj",
				"adj_matrix"
			],
			[
				"yticks",
				"yticks"
			],
			[
				"ytick",
				"yticklabels"
			],
			[
				"upper",
				"uppermask"
			],
			[
				"plt",
				"plt"
			],
			[
				"Best",
				"Bestcomps"
			],
			[
				"hotspot",
				"hotspotVal"
			],
			[
				"vals",
				"vals"
			],
			[
				"gen",
				"gen_xVals"
			],
			[
				"find_max",
				"find_maxMI_for_allBins"
			],
			[
				"max",
				"maxDistance"
			],
			[
				"mi",
				"mi_vals"
			],
			[
				"bin",
				"bin_width"
			],
			[
				"generate",
				"generate_dist_matrix"
			],
			[
				"pdb",
				"pdbFile"
			],
			[
				"dist",
				"dist_matrix"
			],
			[
				"s62f",
				"s62f_bound"
			]
		]
	},
	"buffers":
	[
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 1125,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/calc_dihedralMI_to_resiSet.py",
			"settings":
			{
				"buffer_size": 2106,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/generate_holistic_matrix.py",
			"settings":
			{
				"buffer_size": 2517,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/extract_dihedral_entropy.py",
			"settings":
			{
				"buffer_size": 5859,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Anaconda: Disable linting on this file"
			],
			[
				"anaconda",
				"Anaconda: Show error list"
			],
			[
				"sulbime",
				"SublimeLinter: Enable Linter"
			],
			[
				"LInter",
				"SublimeLinter: Disable Linter"
			],
			[
				"Linter",
				"SublimeLinter: Lint This View"
			],
			[
				"Lint",
				"SublimeLinter: Disable Linter"
			],
			[
				"Anac",
				"Anaconda: Enable linting on this file"
			],
			[
				"Ana",
				"Anaconda: Disable linting on this file"
			],
			[
				"Packa",
				"Package Control: Install Package"
			],
			[
				"linter",
				"SublimeLinter: Enable Linting"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"packa",
				"Package Control: Add Channel"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"colorso",
				"Colorsublime: Browse Themes"
			],
			[
				"colorsche",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"cololr",
				"Colorsublime: Install Theme"
			],
			[
				"Package I",
				"Package Control: Install Package"
			],
			[
				"colorsublime",
				"Colorsublime: Install Theme"
			],
			[
				"install ",
				"Colorsublime: Install Theme"
			],
			[
				"INSTALL PACKA",
				"Package Control: Install Package"
			],
			[
				"Colorsublim",
				"Colorsublime: Install Theme"
			],
			[
				"install pak",
				"Package Control: Install Package"
			],
			[
				"Install Pa",
				"Package Control: Install Package"
			],
			[
				"Package",
				"Package Control: Install Package"
			],
			[
				"\\",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/sukrit/work/scripts/cardsReader",
		"/home/sukrit/work/scripts/cardsReader/apps"
	],
	"file_history":
	[
		"/home/sukrit/bowmore/G-protein-topol.pdb",
		"/home/sukrit/work/scripts/cards-reader/analysis/corrAnalysis.py",
		"/home/sukrit/work/scripts/cards-reader/analysis/correlator_v2.py",
		"/home/sukrit/.bashrc",
		"/tmp/rsub-5ja_ok/.bashrc",
		"/home/sukrit/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/sukrit/pymol/make-portable.sh",
		"/home/sukrit/scripts/cards/analysis/calc_dihedralError_to_resiSet.py",
		"/home/sukrit/scripts/cards/entropy/calc_trjSet_TotalEntropy.py",
		"/home/sukrit/scripts/cards/entropy/calc_trjSet_Backbone_Entropy.py",
		"/home/sukrit/scripts/cards/analysis/corrAnalysis.py",
		"/home/sukrit/scripts/cards/entropy/calc_trjSet_sidechain_Entropy.py",
		"/home/sukrit/work/blact/blact_caz/distances/entropyCalc/doubleMut/totalEntropies_normalized.dat",
		"/home/sukrit/work/blact/blact_caz/distances/entropyCalc/wildType/totalEntropies_normalized.dat",
		"/home/sukrit/scripts/cards/analysis/calc_dihedral_Corr_to_resiSet.py",
		"/home/sukrit/scripts/cards/analysis/generate_hol_MI_matrix.py",
		"/home/sukrit/scripts/multipleFixTraj.sh",
		"/home/sukrit/work/gq/10195_gq_gdp_v/cards/data/resiResiMI_plotting.py",
		"/home/sukrit/work/gq/10195_gq_gdp_v/cards/data/MI_Str_AllDihedrals.dat",
		"/home/sukrit/work/gq/gq_1tnd_homology/templates/3ah8.fasta.txt",
		"/home/sukrit/work/gq/gq_1tnd_homology/templates/alignment_set.ali",
		"/home/sukrit/Downloads/1tnd.fasta.txt",
		"/home/sukrit/work/gq/gq_1tnd_homology/target/gq_sequence_no-hN.txt",
		"/home/sukrit/work/gq/gq_1tnd_homology/templates/align-multiple.ali",
		"/home/sukrit/Downloads/dynamic_correlations_mdtraj.py",
		"/home/sukrit/scripts/cards/analysis/order_disorder_times_mp.py",
		"/home/sukrit/scripts/cards/analysis/extract_sidechainChiAngles.py",
		"/home/sukrit/Downloads/dynamic_delay_correlations_mdtraj.py",
		"/home/sukrit/anaconda3/lib/modeller-9.18/modlib/modeller/config.py",
		"/home/sukrit/Downloads/gq_sequence_no-hN.txt",
		"/home/sukrit/work/structures/1tnd_a.pdb",
		"/home/sukrit/work/gq/10195_gq_gdp_v/cards/analysis/gq_10195_holMI_h5s6Loop.dat",
		"/home/sukrit/work/gq_heterotrimer/ym_heterotrimer/input/npt.mdp",
		"/tmp/rsub-6u8645/multipleRunsSameConstruct.sh",
		"/tmp/rsub-bfuoh5/multipleRunsSameConstruct.sh",
		"/tmp/rsub-y4kens/multipleRunsSameConstruct.sh",
		"/tmp/rsub-t0k6j_/multipleRunsSameConstruct.sh",
		"/tmp/rsub-0ub67f/multipleRunsSameConstruct.sh",
		"/tmp/rsub-we9op7/multipleRunsSameConstruct.sh",
		"/home/sukrit/work/gq_heterotrimer/heterotrimer/input/npt.mdp",
		"/tmp/rsub-hd2c11/multipleRunsSameConstruct.sh",
		"/tmp/rsub-7ctzdu/multipleRunsSameConstruct.sh",
		"/tmp/rsub-dp8jzu/npt.mdp",
		"/home/sukrit/scripts/cards/run/calc_crossCorrelation_EntrA_to_StrB.py",
		"/home/sukrit/scripts/cards/analysis/order_disorder_times.py",
		"/home/sukrit/scripts/cards/engine/correlator_v2.py",
		"/home/sukrit/scripts/cards/analysis/excess_MI_correlator.py",
		"/home/sukrit/scripts/cards/analysis/bootstrap_MI.py",
		"/home/sukrit/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
		"/home/sukrit/scripts/cards/run/calc_entropic_alldihedral_corr.py",
		"/usr/local/bin/MGLToolsPckgs/AutoDockTools/Utilities24/pdbqt_to_pdb.py",
		"/home/sukrit/work/gq/10191_gq/10191_TotalEntropy_Normalized.dat",
		"/home/sukrit/work/gq/10195_gq_gdp_v/10195_totalEntropy_normalized.dat",
		"/home/sukrit/scripts/cards/run/calc_structural_allDihedral_corr.py",
		"/home/sukrit/scripts/cards/entropy/calc_AllDihedral_Entropy.py",
		"/home/sukrit/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/sukrit/scripts/cards/engine/correlator.py",
		"/home/sukrit/scripts/cards/run/calc_crossCorrelation_StrA_to_EntrB.py",
		"/home/sukrit/work/glutamineSynthetase/2bvc/split_phosTBL/test/splitDockedPoses.sh",
		"/home/sukrit/work/glutamineSynthetase/2bvc/split_phosTBL/splitDockedPoses.sh",
		"/home/sukrit/work/glutamineSynthetase/2bvc/split_phosTBL/my_docking.0000",
		"/home/sukrit/work/glutamineSynthetase/2bvc/split_phosTBL/my_docking.",
		"/home/sukrit/work/glutamineSynthetase/2bvc/split_phosTBL/mydocking.pdb",
		"/usr/local/bin/MGLToolsPckgs/AutoDockTools/Utilities24/prepare_pdb_split_alt_confs.py",
		"/home/sukrit/work/glutamineSynthetase/2bvc/split_phosTBL/docked_phosTBL.pdb_nonews.pdb",
		"/home/sukrit/work/glutamineSynthetase/2bvc/split_phosTBL/my_docking.pdbqt",
		"/home/sukrit/work/glutamineSynthetase/2bvc/2bvc_Config.txt",
		"/home/sukrit/work/glutamineSynthetase/2bvc/split_phosTBL/my_docking.pdb",
		"/usr/local/bin/MGLToolsPckgs/AutoDockTools/Utilities24/process_VinaResult.py",
		"/home/sukrit/work/glutamineSynthetase/2bvc/outputTest.pdb1.pdbqt",
		"/home/sukrit/work/glutamineSynthetase/2bvc/complex.pdb",
		"/home/sukrit/work/glutamineSynthetase/2bvc/split_phosTBL/my_docking.001",
		"/home/sukrit/work/glutamineSynthetase/eColi/eColi_Config.txt",
		"/home/sukrit/work/glutamineSynthetase/2bvc/2bvc_Receptor.pdbqt",
		"/home/sukrit/work/glutamineSynthetase/2bvc/p3s.pdbqt",
		"/home/sukrit/work/glutamineSynthetase/2bvc/p3s_ligand.pdb",
		"/home/sukrit/work/glutamineSynthetase/2bvc/2bvc_ReceptorStart.pdb",
		"/home/sukrit/work/glutamineSynthetase/eColi/phosTBL.pdbqt",
		"/home/sukrit/work/glutamineSynthetase/1fpy/1fpy_Config.txt",
		"/home/sukrit/work/glutamineSynthetase/1fpy/testConfig.txt",
		"/home/sukrit/scripts/cards/analysis/calc_rawCorr_to_resiSet.py",
		"/home/sukrit/scripts/cards/engine/entropy.py",
		"/home/sukrit/Downloads/greg_movie.py",
		"/home/sukrit/Downloads/make_cartoon_movie.py",
		"/home/sukrit/work/glutamineSynthetase/1fpy/testReceptor.pdbqt",
		"/home/sukrit/work/glutamineSynthetase/1fpy/1fpy_ReceptorFixed.pdb",
		"/home/sukrit/work/glutamineSynthetase/1fpy/1fpy_ReceptorStart.pdb",
		"/home/sukrit/work/glutamineSynthetase/1fpy/1fpy_NoADP.pdb",
		"/home/sukrit/Downloads/AutoDockTools/doc/test_cmd/testConfig.txt",
		"/home/sukrit/work/glutamineSynthetase/testConfig.txt",
		"/home/sukrit/work/glutamineSynthetase/receptorPDB/eColi_ReceptorStart.mol2",
		"/home/sukrit/work/glutamineSynthetase/receptors/eColi_ReceptorStart.pdbqt",
		"/home/sukrit/Downloads/openbabel-2.4.1/INSTALL",
		"/home/sukrit/work/glutamineSynthetase/receptorPDB/eColi_ReceptorStart.pdbqt",
		"/home/sukrit/work/glutamineSynthetase/receptorPDB/eColi_ReceptorStart.pdb",
		"/home/sukrit/work/glutamineSynthetase/ligandsStart/phosporylatedTBL.pdb",
		"/home/sukrit/work/glutamineSynthetase/ligandsStart/phosporylatedTBL.mol",
		"/home/sukrit/work/glutamineSynthetase/ligandsStart/testMol.sdf",
		"/home/sukrit/work/glutamineSynthetase/ligandsStart/test.pdb",
		"/home/sukrit/work/glutamineSynthetase/ligandsStart/testSMI.smi",
		"/home/sukrit/Downloads/avogadro-1.1.1/INSTALL",
		"/home/sukrit/Downloads/eigen-eigen-da9b4e14c255/INSTALL",
		"/home/sukrit/Downloads/avogadro-1.1.1/build/CMakeFiles/CMakeError.log",
		"/home/sukrit/Downloads/avogadro-1.1.1/build/CMakeFiles/CMakeOutput.log",
		"/home/sukrit/Downloads/avogadro-1.1.1/README",
		"/usr/local/bin/MGLToolsPckgs/AutoDockTools/Utilities24/prepare_ligand4.py",
		"/home/sukrit/Downloads/AutoDockTools/doc/test2/testLog",
		"/home/sukrit/.profile",
		"/home/sukrit/Downloads/AutoDockTools/doc/test2/testConfig_BigBox.txt",
		"/home/sukrit/Downloads/AutoDockTools/doc/test/testConfig.txt",
		"/home/sukrit/Downloads/AutoDockTools/doc/test/gridStuff.txt",
		"/usr/local/bin/MGLToolsPckgs/AutoDockTools/Utilities24/prepare_receptor4.py",
		"/tmp/rsub-13g_q0/multipleRunsSameConstruct.sh",
		"/tmp/rsub-qqbs__/npt.mdp",
		"/home/sukrit/scripts/cards/analysis/convert_MI_matrix_to_edgelist.py",
		"/usr/local/bin/bin/mglenv.sh",
		"/usr/local/bin/MGLToolsPckgs/AutoDockTools/pyAutoDockCommands.py",
		"/usr/local/bin/bin/mglenv.s",
		"/usr/local/bin/bin/mglenv.",
		"/home/sukrit/Downloads/AutoDockTools/doc/test/gridTest.gpl",
		"/home/sukrit/Downloads/AutoDockTools/doc/test/GALS2.dpf",
		"/home/sukrit/Downloads/mgltools_x86_64Linux2_1.5.6/README",
		"/home/sukrit/Downloads/dockingprotocol.txt",
		"/tmp/rsub-wluapr/pr.mdp",
		"/home/sukrit/scripts/cards/analysis/convert_MI_to_distance.py",
		"/tmp/rsub-d_3q4e/pr",
		"/tmp/rsub-0edssy/em.mdp",
		"/home/sukrit/scripts/cards/analysis/normalize_MI_Matrices.py"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 113.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"help"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1125,
						"regions":
						{
						},
						"selection":
						[
							[
								1125,
								1125
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								226,
								10,
								30,
								16,
								27,
								2,
								0,
								141,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "apps/calc_dihedralMI_to_resiSet.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2106,
						"regions":
						{
						},
						"selection":
						[
							[
								1594,
								1594
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								226,
								10,
								30,
								16,
								37,
								40,
								7,
								209,
								230,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 517.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "apps/generate_holistic_matrix.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2517,
						"regions":
						{
						},
						"selection":
						[
							[
								2348,
								2348
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								226,
								10,
								30,
								16,
								38,
								16,
								9,
								39,
								24,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 66.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "apps/extract_dihedral_entropy.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5859,
						"regions":
						{
						},
						"selection":
						[
							[
								819,
								819
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								226,
								11,
								2,
								16,
								14,
								22,
								6,
								254,
								223,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 29.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "cardsReader.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/scripts/ligSITE.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/work/scripts/project_defs/pymol.sublime-project"
			],
			[
				"pymol",
				"~/scripts/project_defs/pymol.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"collect_all",
				"collect_all_dihedral_struc_states"
			],
			[
				"collect_all_dihe",
				"collect_all_dihedral_struc_states"
			],
			[
				"get_backbone",
				"get_backbone_angles"
			],
			[
				"compute_all_struc_states",
				"compute_all_struc_states"
			],
			[
				"collect_all_dihedral",
				"collect_all_dihedral_struc_states"
			],
			[
				"get_resi_indices",
				"get_resi_indices"
			],
			[
				"compute_dihedral_based_MI_to_resiSet",
				"compute_dihedral_based_MI_to_resiSet"
			],
			[
				"get_neighbors",
				"get_neighbors"
			],
			[
				"sum_",
				"sum_dihedrals_by_resis"
			],
			[
				"sum",
				"sum_dihedrals_by_resis"
			],
			[
				"normalize",
				"normalize_mi"
			],
			[
				"ineigh",
				"identify_hotspots_include_neighbors"
			],
			[
				"total",
				"compute_totalMI_include_Neighbors"
			],
			[
				"collect_all_dihedral_struc_states",
				"collect_all_dihedral_struc_states"
			],
			[
				"",
				"get_all_ord_disord_times"
			],
			[
				"transition",
				"obtain_transition_times"
			],
			[
				"get_all_ord_disord_times",
				"get_all_ord_disord_times"
			],
			[
				"ordered",
				"compute_orderedTimes_from_disorderedTime"
			],
			[
				"calc_or",
				"calc_ord_disord_times"
			],
			[
				"ord",
				"compute_ord_disord_times_singleDihedral"
			],
			[
				"transiti",
				"obtain_transition_times"
			],
			[
				"order",
				"compute_orderedTimes_from_disorderedTime"
			],
			[
				"disord",
				"compute_orderedTimes_from_disorderedTime"
			],
			[
				"tran",
				"obtain_transition_times"
			],
			[
				"calc_ord",
				"calc_ord_disord_times"
			],
			[
				"sort_inds",
				"sort_inds_by_res"
			],
			[
				"sort_",
				"sort_resis_basedOnArray"
			],
			[
				"hubs",
				"identify_hotspots_include_neighbors"
			],
			[
				"ident",
				"identify_hotspots"
			],
			[
				"print",
				"print_for_pymol"
			],
			[
				"iden",
				"identify_hotspots_include_neighbors"
			],
			[
				"compute_singleTraj_DynA_StrucB_Counts",
				"compute_singleTraj_DynA_StrucB_Counts"
			],
			[
				"compute_singe",
				"compute_singleTraj_StrucA_DynB_Counts"
			],
			[
				"DynC",
				"compute_singleTraj_DynCounts"
			],
			[
				"compute_single",
				"compute_singleTraj_DynCounts"
			],
			[
				"compute_allTraj_DynA_StrucB_Counts",
				"compute_allTraj_DynA_StrucB_Counts"
			],
			[
				"count_all_dihedrals_struct_states",
				"count_all_dihedrals_struct_states"
			],
			[
				"count_j",
				"count_joint_crossState_occurrences"
			],
			[
				"count_state",
				"count_state_occurences"
			],
			[
				"count_joint",
				"count_joint_state_occurences"
			],
			[
				"compute_traj_backbone_states",
				"compute_traj_backbone_states"
			],
			[
				"assign_segments_ordered_disordered",
				"assign_segments_ordered_disordered"
			],
			[
				"compute_traj_sidechain_struc_states",
				"compute_traj_sidechain_struc_states"
			],
			[
				"get_sidechain_angles",
				"get_sidechain_angles"
			],
			[
				"compute_traj",
				"compute_traj_sidechain_struc_states"
			],
			[
				"alld",
				"collect_all_dihedral_struc_states"
			],
			[
				"entr_states_to_counts",
				"entr_states_to_counts"
			],
			[
				"ide",
				"identify_hotspots_include_neighbors"
			],
			[
				"cross",
				"compute_crossState_MI"
			],
			[
				"entropie",
				"entropies_to_mi"
			],
			[
				"compute_Struc_",
				"compute_Struc_and_Entr_entropies"
			],
			[
				"occ",
				"occurences_to_entropies"
			],
			[
				"compute_",
				"compute_Struc_and_Entr_entropies"
			],
			[
				"occur",
				"occurences_to_entropies"
			],
			[
				"compute_Struc_and_Entr_entropies",
				"compute_Struc_and_Entr_entropies"
			],
			[
				"count_stat",
				"count_state_occurences"
			],
			[
				"crossCount",
				"compute_allTraj_crossCount_StrucA_EntrB"
			],
			[
				"str_state",
				"str_states_to_counts"
			],
			[
				"joint",
				"count_joint_crossState_occurrences"
			],
			[
				"str_states",
				"str_states_to_counts"
			],
			[
				"counts",
				"count_all_dihedrals_struct_states"
			],
			[
				"crossCo",
				"compute_crossCount_JC"
			],
			[
				"collect_allTrajs_DynStates",
				"collect_allTrajs_DynStates"
			],
			[
				"holistic",
				"holistic_states_to_counts"
			],
			[
				"collect_all_holistic_states",
				"collect_all_holistic_states"
			],
			[
				"obtain",
				"obtain_transition_times"
			],
			[
				"allTraj",
				"collect_allTrajs_DynStates"
			],
			[
				"dynStat",
				"collect_allTrajs_DynStates"
			],
			[
				"assign_angle_to_basin_hard_cutoff",
				"assign_angle_to_basin_hard_cutoff"
			],
			[
				"assign_angles_to_basins_buffered",
				"assign_angles_to_basins_buffered"
			],
			[
				"backbone",
				"compute_traj_backbone_states"
			],
			[
				"assign_phi_angles_to_basins_buffered",
				"assign_phi_angles_to_basins_buffered"
			],
			[
				"proces",
				"process_MI_matrix"
			],
			[
				"collect",
				"collect_allTrajs_DynStates"
			],
			[
				"get_backbone_angles",
				"get_backbone_angles"
			],
			[
				"struc_dy",
				"compute_all_dihedral_struc_dyn"
			],
			[
				"str_dyn",
				"compute_all_dihedral_struc_dyn"
			],
			[
				"collect_all_",
				"collect_all_holistic_states"
			],
			[
				"dynState",
				"compute_all_dihedral_dynStates"
			],
			[
				"dyn",
				"assign_AllTrajs_dynStates"
			],
			[
				"entr_sta",
				"get_singleTraj_sidechain_dynStates"
			],
			[
				"collect_alldi",
				"collect_all_dihedral_dyn_states"
			],
			[
				"assign_angles",
				"assign_angles_to_basins_buffered"
			],
			[
				"dynS",
				"get_singleTraj_sidechain_dynStates"
			],
			[
				"get_bac",
				"get_backbone_angles"
			],
			[
				"get_singleTraj_sidechain_dynStates",
				"get_singleTraj_sidechain_dynStates"
			],
			[
				"compute_all_dihedral_dynStates",
				"compute_all_dihedral_dynStates"
			],
			[
				"collect_all_dihedral_dyn_states",
				"collect_all_dihedral_dyn_states"
			],
			[
				"singleTraj",
				"get_singleTraj_sidechain_dynStates"
			],
			[
				"all_dih",
				"collect_all_dihedral_dyn_states"
			],
			[
				"occu",
				"occurences_to_entropies"
			],
			[
				"entropies",
				"str_entropies"
			],
			[
				"compute_singleTraj_StrucCounts",
				"compute_singleTraj_StrucCounts"
			],
			[
				"str_en",
				"str_entropies"
			],
			[
				"count_all",
				"count_all_dihedrals_struct_states"
			],
			[
				"str_mi",
				"str_mi"
			],
			[
				"compute_si",
				"compute_singleTraj_StrucCounts"
			],
			[
				"str_sta",
				"str_states_to_counts"
			],
			[
				"states_",
				"str_states_to_counts"
			],
			[
				"hotspot",
				"identify_hotspots_include_neighbors"
			],
			[
				"compute_crossMI_StrA_EntrB",
				"compute_crossMI_StrA_EntrB"
			],
			[
				"compute_crossMI",
				"compute_crossMI_EntrA_StrB"
			],
			[
				"entr_",
				"entr_mi"
			],
			[
				"entro",
				"entropies_to_mi"
			],
			[
				"entr_mi",
				"entr_mi_redundancy"
			],
			[
				"compute_struc",
				"compute_struc_MI"
			],
			[
				"mi_",
				"mi_to_redundancy"
			],
			[
				"entrpie",
				"entropies_to_mi"
			],
			[
				"raw",
				"hol_mi_Raw"
			],
			[
				"joint_",
				"count_joint_state_occurences"
			],
			[
				"count",
				"str_states_to_counts"
			],
			[
				"hol_mi",
				"hol_mi_Raw"
			],
			[
				"hol_m",
				"hol_mi_Raw"
			],
			[
				"ent",
				"entropies_to_mi"
			],
			[
				"normed",
				"mi_normed_numStates"
			],
			[
				"mi_to",
				"mi_to_redundancy"
			],
			[
				"graph",
				"compute_graph_distance"
			],
			[
				"adj",
				"compute_adjacency_matrix"
			],
			[
				"adjac",
				"compute_adjacency_matrix"
			],
			[
				"assign_psi_angles_to_basins_buffered",
				"assign_psi_angles_to_basins_buffered"
			],
			[
				"compute_adjacency_matrix",
				"compute_adjacency_matrix"
			],
			[
				"hol_mi_Raw",
				"hol_mi_Raw"
			],
			[
				"hol",
				"hol_mi_redundancy"
			],
			[
				"MI",
				"str_mi"
			],
			[
				"remove_",
				"remove_nans"
			],
			[
				"get_single",
				"get_singleTraj_sidechain_dynStates"
			],
			[
				"dynstat",
				"get_singleTraj_sidechain_dynStates"
			],
			[
				"struc",
				"compute_all_struc_states"
			]
		],
		"width": 494.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 262.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
